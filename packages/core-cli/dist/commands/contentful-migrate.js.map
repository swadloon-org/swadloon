{"version":3,"sources":["../../src/commands/contentful-migrate.ts"],"sourcesContent":["import path from 'path';\n\nimport { Config, Flags } from '@oclif/core';\nimport { runMigration } from 'contentful-migration';\nimport * as t from 'io-ts';\n\nimport { loadDotEnv } from '@newrade/core-node-utils';\n\nimport { BaseCommand } from '../base-command.js';\n\n// import packageJson from '../../package.json'; // TODO: check if possible to load local package json\n\nexport const Env = t.intersection([\n  t.partial({\n    /**\n     * Figma\n     */\n    FIGMA_TOKEN: t.string,\n    FIGMA_FILE: t.string,\n  }),\n  t.type({\n    /**\n     * Contentful variables\n     */\n    CONTENTFUL_MIGRATION_FILE: t.string,\n    CONTENTFUL_SPACEID: t.string,\n    CONTENTFUL_MANAGEMENT_TOKEN: t.string,\n    CONTENTFUL_ENV: t.string,\n  }),\n]);\n\nexport type ENV = t.TypeOf<typeof Env>;\n\nexport default class ContentfulMigrate extends BaseCommand {\n  static description = 'execute migration with the contentful CLI ';\n\n  static examples = [`$ nr contentful-migrate`];\n\n  static flags = {\n    help: Flags.help({ char: 'h' }),\n  };\n\n  static args = [{ name: 'file', description: 'figma file id' }];\n\n  constructor(argv: string[], config: Config) {\n    super(argv, config, { name: 'contentful-migrate' });\n  }\n\n  async run() {\n    const env = loadDotEnv<ENV>({\n      schema: Env,\n      dotEnvPath: '.env',\n      packageName: 'core-cli',\n      printEnvVariables: true,\n    });\n\n    /**\n     * @see https://github.com/contentful/contentful-migration\n     */\n    runMigration({\n      filePath: path.resolve(process.cwd(), env.CONTENTFUL_MIGRATION_FILE),\n      environmentId: env.CONTENTFUL_ENV,\n      spaceId: env.CONTENTFUL_SPACEID,\n      accessToken: env.CONTENTFUL_MANAGEMENT_TOKEN,\n    })\n      .then(() => console.log('Migration Done!'))\n      .catch((e) => console.error(e));\n  }\n}\n"],"names":["t","ContentfulMigrate","BaseCommand","description","examples","flags","help","Flags","char","args","name","constructor","argv","config","run","env","loadDotEnv","schema","Env","dotEnvPath","packageName","printEnvVariables","runMigration","filePath","path","resolve","process","cwd","CONTENTFUL_MIGRATION_FILE","environmentId","CONTENTFUL_ENV","spaceId","CONTENTFUL_SPACEID","accessToken","CONTENTFUL_MANAGEMENT_TOKEN","then","console","log","catch","e","error","intersection","partial","FIGMA_TOKEN","string","FIGMA_FILE","type"],"mappings":"AAAA;;;;;AAAiB,IAAA,KAAM,kCAAN,MAAM,EAAA;AAEO,IAAA,KAAa,WAAb,aAAa,CAAA;AACd,IAAA,oBAAsB,WAAtB,sBAAsB,CAAA;AACvCA,IAAAA,CAAC,mCAAM,OAAO,EAAb;AAEc,IAAA,cAA0B,WAA1B,0BAA0B,CAAA;AAEzB,IAAA,cAAoB,WAApB,oBAAoB,CAAA;AAyBjC,MAAMC,iBAAiB,SAASC,cAAW,YAAA;IACxD,OAAOC,WAAW,GAAG,4CAA4C,CAAC;IAElE,OAAOC,QAAQ,GAAG;QAAC,CAAC,uBAAuB,CAAC;KAAC,CAAC;IAE9C,OAAOC,KAAK,GAAG;QACbC,IAAI,EAAEC,KAAK,MAAA,CAACD,IAAI,CAAC;YAAEE,IAAI,EAAE,GAAG;SAAE,CAAC;KAChC,CAAC;IAEF,OAAOC,IAAI,GAAG;QAAC;YAAEC,IAAI,EAAE,MAAM;YAAEP,WAAW,EAAE,eAAe;SAAE;KAAC,CAAC;IAE/DQ,YAAYC,IAAc,EAAEC,MAAc,CAAE;QAC1C,KAAK,CAACD,IAAI,EAAEC,MAAM,EAAE;YAAEH,IAAI,EAAE,oBAAoB;SAAE,CAAC,CAAC;KACrD;IAED,MAAMI,GAAG,GAAG;QACV,MAAMC,GAAG,GAAGC,CAAAA,GAAAA,cAAU,AAKpB,CAAA,WALoB,CAAM;YAC1BC,MAAM,EAAEC,GAAG;YACXC,UAAU,EAAE,MAAM;YAClBC,WAAW,EAAE,UAAU;YACvBC,iBAAiB,EAAE,IAAI;SACxB,CAAC,AAAC;QAEH;;OAEG,CACHC,CAAAA,GAAAA,oBAAY,AAKV,CAAA,aALU,CAAC;YACXC,QAAQ,EAAEC,KAAI,QAAA,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,EAAE,EAAEZ,GAAG,CAACa,yBAAyB,CAAC;YACpEC,aAAa,EAAEd,GAAG,CAACe,cAAc;YACjCC,OAAO,EAAEhB,GAAG,CAACiB,kBAAkB;YAC/BC,WAAW,EAAElB,GAAG,CAACmB,2BAA2B;SAC7C,CAAC,CACCC,IAAI,CAAC,IAAMC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAC1CC,KAAK,CAAC,CAACC,CAAC,GAAKH,OAAO,CAACI,KAAK,CAACD,CAAC,CAAC,CAAC,CAAC;KACnC;CACF;kBAnCoBtC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AArB/B,MAAMiB,GAAG,GAAGlB,CAAC,CAACyC,YAAY,CAAC;IAChCzC,CAAC,CAAC0C,OAAO,CAAC;QACR;;OAEG,CACHC,WAAW,EAAE3C,CAAC,CAAC4C,MAAM;QACrBC,UAAU,EAAE7C,CAAC,CAAC4C,MAAM;KACrB,CAAC;IACF5C,CAAC,CAAC8C,IAAI,CAAC;QACL;;OAEG,CACHlB,yBAAyB,EAAE5B,CAAC,CAAC4C,MAAM;QACnCZ,kBAAkB,EAAEhC,CAAC,CAAC4C,MAAM;QAC5BV,2BAA2B,EAAElC,CAAC,CAAC4C,MAAM;QACrCd,cAAc,EAAE9B,CAAC,CAAC4C,MAAM;KACzB,CAAC;CACH,CAAC,AAAC;QAjBU1B,GAAG,GAAHA,GAAG"}