{"version":3,"sources":["../../src/todo/fork-repo.ts"],"sourcesContent":["import debug from 'debug';\nimport * as t from 'io-ts';\n\nexport type ENV = t.TypeOf<typeof Env>;\nexport const Env = t.intersection([\n  t.type({}),\n  t.type({\n    /**\n     * The master repository's git host\n     * @default 'github.com'\n     */\n    MASTER_GIT_HOST: t.string,\n    /**\n     * The master repository's organization\n     * @example '@newrade'\n     */\n    MASTER_REPO_ORG: t.string,\n    /**\n     * The master repository's name\n     * @example 'repo-name' in @<org>/<repo-name>\n     */\n    MASTER_REPO_NAME: t.string,\n    /**\n     * The repository git host\n     * @default 'github.com'\n     */\n    PROJECT_GIT_HOST: t.string,\n    /**\n     * The repository's organization\n     * @example '@newrade'\n     */\n    PROJECT_REPO_ORG: t.string,\n    /**\n     * The repository name\n     * @example 'repo-name' in @<org>/<repo-name>\n     */\n    PROJECT_REPO_NAME: t.string,\n  }),\n]);\n\n// scriptLog(`forking master repo...`);\n\n// const clone = spawn(\n//   `git clone --bare git@${dotEnvProcess.MASTER_GIT_HOST}:${dotEnvProcess.MASTER_REPO_ORG}/${dotEnvProcess.MASTER_REPO_NAME}.git \\\n//   cd ${dotEnvProcess.MASTER_REPO_NAME}`,\n//   {\n//     cwd: '..',\n//     shell: getShellForPlatform(),\n//     stdio: 'inherit',\n//     env: process.env,\n//   }\n// );\n\n// const cd = spawn(\n//   `git clone --bare git@${dotEnvProcess.MASTER_GIT_HOST}:${dotEnvProcess.MASTER_REPO_ORG}/${dotEnvProcess.MASTER_REPO_NAME}.git`,\n//   {\n//     cwd: '..',\n//     shell: getShellForPlatform(),\n//     stdio: 'inherit',\n//     env: process.env,\n//   }\n// );\n"],"names":["t","Env","intersection","type","MASTER_GIT_HOST","string","MASTER_REPO_ORG","MASTER_REPO_NAME","PROJECT_GIT_HOST","PROJECT_REPO_ORG","PROJECT_REPO_NAME"],"mappings":"AAAA;;;;;AACYA,IAAAA,CAAC,mCAAM,OAAO,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGN,MAAMC,GAAG,GAAGD,CAAC,CAACE,YAAY,CAAC;IAChCF,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC;IACVH,CAAC,CAACG,IAAI,CAAC;QACL;;;OAGG,CACHC,eAAe,EAAEJ,CAAC,CAACK,MAAM;QACzB;;;OAGG,CACHC,eAAe,EAAEN,CAAC,CAACK,MAAM;QACzB;;;OAGG,CACHE,gBAAgB,EAAEP,CAAC,CAACK,MAAM;QAC1B;;;OAGG,CACHG,gBAAgB,EAAER,CAAC,CAACK,MAAM;QAC1B;;;OAGG,CACHI,gBAAgB,EAAET,CAAC,CAACK,MAAM;QAC1B;;;OAGG,CACHK,iBAAiB,EAAEV,CAAC,CAACK,MAAM;KAC5B,CAAC;CACH,CAAC,AAAC,EAEH,uCAAuC;CAEvC,uBAAuB;CACvB,oIAAoI;CACpI,2CAA2C;CAC3C,MAAM;CACN,iBAAiB;CACjB,oCAAoC;CACpC,wBAAwB;CACxB,wBAAwB;CACxB,MAAM;CACN,KAAK;CAEL,oBAAoB;CACpB,oIAAoI;CACpI,MAAM;CACN,iBAAiB;CACjB,oCAAoC;CACpC,wBAAwB;CACxB,wBAAwB;CACxB,MAAM;CACN,KAAK;QAzDQJ,GAAG,GAAHA,GAAG"}