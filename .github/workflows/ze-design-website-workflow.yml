#
# Github Workflow config file
#
# - reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# - composite actions: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
#

name: ze-design-website

on:
  push:
    paths:
      - '.github/actions/**/*'
      - '.github/workflows/ze-design-website-workflow.yml'
      - '**/package.json'
      - '**/package-lock.json'
      - '**/yarn.lock'
      - 'packages/core-*/**/*'
      - 'packages/ze-*/**/*'
    branches:
      - dev
      - master
      - release
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

env:
  #
  # Debugging
  #
  DEBUG: 'nr*'
  #
  # Node
  #
  NODE_OPTIONS: '--max-old-space-size=4096'

  #
  # App
  #
  APP_DOMAIN: zedesignsystem.com
  APP_SUBDOMAIN: ''

jobs:
  build-test-deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]

    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, clone it normally.
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          clean: false

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          clean: false

      - name: 'Checkout, Setup NodeJS + yarn and install dependencies'
        uses: ./.github/actions/base-node-setup

      - name: Set the env variable depending on the branch
        uses: ./packages/core-github-actions/built/set-app-env

      - name: Verify dependencies
        run: yarn lerna:depcheck --scope @newrade/ze-*

      - name: Typecheck
        run: yarn lerna:typecheck --scope @newrade/ze-design-website

      - name: Lint (ls-lint) source files (core-docs)
        run: yarn ls-lint

      - name: Lint (ls-lint) source files
        run: yarn lerna:ls-lint --scope @newrade/ze-*

      - name: Lint source files
        run: yarn eslint ./packages/ze-design-website/src/ --ext "ts,tsx"

      - name: Build ze-design-system
        run: yarn lerna:build:lib --scope @newrade/ze-design-system

      # - name: Run unit tests
      #   run: yarn lerna:test --scope @newrade/ze-*

      - name: Clean package
        run: yarn lerna:clean --scope @newrade/ze-design-website

      - name: Build package
        run: yarn lerna:build:app --scope @newrade/ze-design-website

      - name: Deploy
        id: deploy
        if: ${{ env.APP_CI_DEPLOY && matrix.os == 'ubuntu-latest' }}
        uses: amondnet/vercel-action@v20
        with:
          github-comment: false
          scope: newrade
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: 'public'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: prj_Iu3M9OUBoUrzzQbljsaq6Z3WiRXJ
          working-directory: ./packages/ze-design-website
          alias-domains: |
            ${{ env.APP_HOST }}

      #
      # @see https://www.foo.software/docs/lighthouse-check-github-action/intro
      # @see https://www.foo.software/docs/lighthouse-check-github-action/configuration#githubaccesstoken
      #
      - name: Lighthouse Check
        if: ${{ env.APP_CI_DEPLOY && matrix.os == 'ubuntu-latest' }}
        uses: foo-software/lighthouse-check-action@v5.0.0
        with:
          urls: ${{ steps.deploy.outputs.preview-url }}
          gitHubAccessToken: ${{ secrets.GITHUB_TOKEN }}
